Script started on 2020-03-24 01:57:08-0400
]0;zhoux134@nxsrv:/h/u4/c8/04/zhoux134/zhoux134/lab10nxsrv:~/zhoux134/lab10$ bd[K[Kgdb bufserver
GNU gdb (Ubuntu 8.1-0ubuntu3.2) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break set_up_server_socket
Breakpoint 1 at 0xf10: file socket.c, line 35.
(gdb) n
The program is not being run.
(gdb) next
The program is not being run.
(gdb) run
Starting program: /h/u4/c8/04/zhoux134/zhoux134/lab10/bufserver 

Breakpoint 1, set_up_server_socket (self=0x555555757260, num_queue=5)
    at socket.c:35
35	int set_up_server_socket(struct sockaddr_in *self, int num_queue) {
(gdb) next
36	    int soc = socket(PF_INET, SOCK_STREAM, 0);
(gdb) n
37	    if (soc < 0) {
(gdb) n
44	    int on = 1;
(gdb) n
45	    int status = setsockopt(soc, SOL_SOCKET, SO_REUSEADDR,
(gdb) n
47	    if (status < 0) {
(gdb) n
53	    if (bind(soc, (struct sockaddr *)self, sizeof(*self)) < 0) {
(gdb) n[Krandclient 127.0.0.1
Undefined command: "randclient".  Try "help".
(gdb) net[Kxt
60	    if (listen(soc, num_queue) < 0) {
(gdb) n
66	    return soc;
(gdb) n
67	}
(gdb) n
main () at bufserver.c:27
warning: Source file is more recent than executable.
27	        int fd = accept_connection(listenfd);
(gdb) n
Waiting for a new connection...
New connection accepted from 127.0.0.1:58478
28	        if (fd < 0) {
(gdb) n
33	        char buf[BUFSIZE] = {'\0'};
(gdb) n
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) n
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) n
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41	            inbuf += nbytes;
(gdb) n
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
59	
(gdb) n
60	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
69	                // memmove(destination, source, number_of_bytes)
(gdb) n
70	                inbuf -= where;
(gdb) n
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
74	            }
(gdb) 
75	            // Step 5: update after and room, in preparation for the next read.
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69	                // memmove(destination, source, number_of_bytes)
(gdb) 
70	                inbuf -= where;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
74	            }
(gdb) 
75	            // Step 5: update after and room, in preparation for the next read.
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69	                // memmove(destination, source, number_of_bytes)
(gdb) 
70	                inbuf -= where;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
74	            }
(gdb) 
75	            // Step 5: update after and room, in preparation for the next read.
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69	                // memmove(destination, source, number_of_bytes)
(gdb) 
70	                inbuf -= where;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
74	            }
(gdb) 
75	            // Step 5: update after and room, in preparation for the next read.
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69	                // memmove(destination, source, number_of_bytes)
(gdb) 
70	                inbuf -= where;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
74	            }
(gdb) 
75	            // Step 5: update after and room, in preparation for the next read.
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
78	
(gdb) 
27	        int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...



exit

^C
Program received signal SIGINT, Interrupt.
0x00007ffff7b067e4 in __libc_accept (fd=3, addr=..., len=0x7fffffffe5b8)
    at ../sysdeps/unix/sysv/linux/accept.c:26
26	../sysdeps/unix/sysv/linux/accept.c: No such file or directory.
(gdb) end[K[Ki[Kc[Kxit
Undefined command: "exit".  Try "help".
(gdb) quit
A debugging session is active.

	Inferior 1 [process 42562] will be killed.

Quit anyway? (y or n) y
]0;zhoux134@nxsrv:/h/u4/c8/04/zhoux134/zhoux134/lab10nxsrv:~/zhoux134/lab10$ exit
exit

Script done on 2020-03-24 02:07:36-0400
