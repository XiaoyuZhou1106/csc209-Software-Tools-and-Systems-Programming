Script started on 2020-03-24 02:11:20-0400
]0;zhoux134@nxsrv:/h/u4/c8/04/zhoux134/zhoux134/lab10nxsrv:~/zhoux134/lab10$ bdv[K[K[Kgdn[Kbb[K bufserver
GNU gdb (Ubuntu 8.1-0ubuntu3.2) 8.1.0.20180409-git
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break main
Breakpoint 1 at 0xce2: file bufserver.c, line 18.
(gdb) n
The program is not being run.
(gdb) run
Starting program: /h/u4/c8/04/zhoux134/zhoux134/lab10/bufserver 

Breakpoint 1, main () at bufserver.c:18
warning: Source file is more recent than executable.
18	int main() {
(gdb) b[Kv
Undefined command: "v".  Try "help".
(gdb) b[Kn
21	    setbuf(stdout, NULL);
(gdb) n
23	    struct sockaddr_in *self = init_server_addr(PORT);
(gdb) n
24	    int listenfd = set_up_server_socket(self, 5);
(gdb) n
27	        int fd = accept_connection(listenfd);
(gdb) n
Waiting for a new connection...
New connection accepted from 127.0.0.1:59506
28	        if (fd < 0) {
(gdb) n
33	        char buf[BUFSIZE] = {'\0'};
(gdb) n
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) n
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) 
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 

41	            inbuf += nbytes;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69	                // memmove(destination, source, number_of_bytes)
(gdb) 
70	                inbuf -= where;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
74	            }
(gdb) 
75	            // Step 5: update after and room, in preparation for the next read.
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69	                // memmove(destination, source, number_of_bytes)
(gdb) 
70	                inbuf -= where;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
74	            }
(gdb) 
75	            // Step 5: update after and room, in preparation for the next read.
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69	                // memmove(destination, source, number_of_bytes)
(gdb) 
70	                inbuf -= where;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
74	            }
(gdb) 
75	            // Step 5: update after and room, in preparation for the next read.
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69	                // memmove(destination, source, number_of_bytes)
(gdb) 
70	                inbuf -= where;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
74	            }
(gdb) 
75	            // Step 5: update after and room, in preparation for the next read.
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
59	
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
69	                // memmove(destination, source, number_of_bytes)
(gdb) 
70	                inbuf -= where;
(gdb) 
52	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
74	            }
(gdb) 
75	            // Step 5: update after and room, in preparation for the next read.
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 








78	
(gdb) 
27	        int fd = accept_connection(listenfd);
(gdb) 
Waiting for a new connection...

^C
Program received signal SIGINT, Interrupt.
0x00007ffff7b067e4 in __libc_accept (fd=3, addr=..., len=0x7fffffffe5b8)
    at ../sysdeps/unix/sysv/linux/accept.c:26
26	../sysdeps/unix/sysv/linux/accept.c: No such file or directory.
(gdb) quit
A debugging session is active.

	Inferior 1 [process 65534] will be killed.

Quit anyway? (y or n) y
]0;zhoux134@nxsrv:/h/u4/c8/04/zhoux134/zhoux134/lab10nxsrv:~/zhoux134/lab10$ ecx[K[Kxit
exit

Script done on 2020-03-24 02:16:44-0400
